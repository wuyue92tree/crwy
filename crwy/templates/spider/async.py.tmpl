#!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import print_function

import logging
import logging.config
import pycurl
import inspect
import gevent
import sys
from crwy.spider import Spider
from crwy.utils.queue.RedisQueue import RedisQueue

logging.config.fileConfig('./${project_name}/default_logger.conf')

queue = RedisQueue('foo')


def get_current_function_name():
    return inspect.stack()[1][3]


class ${class_name}Spider(Spider):
    def __init__(self):
        Spider.__init__(self)
        self.spider_name = '${spider_name}'
        self.logger = logging.getLogger('rtLogger')

    def crawler_${spider_name}(self, worker):
        try:
            while not queue.empty():
                url = 'http://example.com/%s' % queue.get()
                try:
                    response = self.html_downloader.download(url)
                except pycurl.error:
                    self.logger.warning('%s : fail to access %s' % (get_current_function_name(), url))
                try:
                    soups = self.html_parser.parser(response)
                except AttributeError:
                    self.logger.warning('%s : analysis fail on %s' % (get_current_function_name(), url))
                print(url)
                print(soups)
                print('Length of queue : %s' % queue.qsize())

            self.logger.info('[%s] %s : crawler success !!!' % (worker, get_current_function_name()))

        except Exception as e:
            self.logger.error('%s : you got a error %s' % (get_current_function_name(), e))

    def add_queue(self):
        for i in range(100):
            queue.put(i)
        print(queue.qsize())

    def run(self):
        try:
            worker = sys.argv[4]
        except :
            print('No worker found!!!\n')
            exit()

        if worker == 'crawler':
            gevent.joinall([gevent.spawn(self.crawler_${spider_name}, 'worker%d' % i) for i in range(10)])
        elif worker == 'add_queue':
            queue.clean()
            self.add_queue()
        else:
            print('Invalid worker <%s>!!!\n' % worker)
            exit()

